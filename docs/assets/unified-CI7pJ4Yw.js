import"./modulepreload-polyfill-B5Qt9EMX.js";import{b as y,C as d,a as S,r as w,c as h,T as m}from"./config-CNwrM9qc.js";const C=new TextEncoder,A=new TextDecoder,c=e=>C.encode(typeof e=="string"?e:JSON.stringify(e)),r=(...e)=>console.log("[RemoteAPI]",...e);let n={names:[],collected:{},t:Date.now()};const g="bayou_collected_items",l="reloadReason";function f(e){try{localStorage.setItem(g,JSON.stringify(e)),r("State saved to cache:",e)}catch(t){console.error("Failed to save state to cache:",t)}}function p(){try{const e=localStorage.getItem(g);if(e){const t=JSON.parse(e);return r("State loaded from cache:",t),t}}catch(e){console.error("Failed to load state from cache:",e)}return null}function L(){sessionStorage.setItem(l,"switchCamera"),r("Marked camera switch in session storage")}function b(){return sessionStorage.getItem(l)==="switchCamera"?(sessionStorage.removeItem(l),r("Detected camera switch reload"),!0):(r("Normal page load (not camera switch)"),!1)}function u(e){const t=Array.isArray(e==null?void 0:e.names)?e.names.map(String):[],a=e!=null&&e.collected&&typeof e.collected=="object"?e.collected:{},o={};t.forEach(s=>o[s]=a[s]===void 0?!0:!!a[s]),Object.keys(a).forEach(s=>{a[s]&&(o[s]=!0,t.includes(s)||t.push(s))});const i=Number.isFinite(e==null?void 0:e.t)?e.t:Date.now();return{names:t,collected:o,t:i}}let E=0;const k=()=>({apiSpecId:d.API_SPEC_ID,getRequestHandler(e){const t=(e==null?void 0:e.body)&&(e.body.byteLength??e.body.length)||0;if(r("REQ",`endpoint=${e.endpointId}`,`params=${JSON.stringify(e.parameters||{})}`,`body=${t}B`),e.endpointId==="ping"){const a=++E,o=performance.now();return i=>{i({status:"success",metadata:{n:String(a)},body:c({pong:!0,t:Date.now(),n:a})}),r("RES",`ping #${a}`,`${Math.round(performance.now()-o)}ms`)}}if(e.endpointId==="get_state"){const a=performance.now();return o=>{o({status:"success",metadata:{count:String(n.names.length)},body:c(n)}),r("RES","get_state",`${Math.round(performance.now()-a)}ms`,n)}}if(e.endpointId==="set_state"){const a=performance.now();return o=>{var i;try{let s=(i=e.parameters)==null?void 0:i.payload;if(s==null&&e.body&&(s=A.decode(e.body)),typeof s!="string"){o({status:"bad_request",metadata:{},body:c('missing or invalid "payload" (expected stringified JSON)')});return}const v=JSON.parse(s);n=u(v),f(n),o({status:"success",metadata:{count:String(n.names.length)},body:c({ok:!0})}),r("RES","set_state",`${Math.round(performance.now()-a)}ms`,"Updated gameState:",n)}catch(s){o({status:"server_error",metadata:{},body:c(String((s==null?void 0:s.message)||s))})}}}}});class T{constructor(){this.outputContainer=document.getElementById("app"),this.cameraKit=null,this.session=null,this.mediaStream=null,this.lensActive=!1,this.currentLens=null,this.currentFacingMode="environment",this.lastTap=0,this.tapTimeout=null,this.backgroundAudio=document.getElementById("backgroundAudio"),this.liveCanvas=null,this.initializeApp()}async initializeApp(){if(b()){const t=p();t&&(n=u(t),r("Restored state from cache after camera switch:",n))}else{const t=p();t&&(n=u(t),r("Restored state from cache on startup:",n))}this.setupDoubleTapGesture(),this.setupBackgroundAudio(),await this.initializeCameraKit(),await this.autoStartWithLens()}async initializeCameraKit(){try{this.updateStatus("Initializing Camera Kit..."),this.cameraKit=await y({apiToken:d.API_TOKEN,logger:"console"},i=>i.provides(S(w.token,()=>k()))),console.info("[RemoteAPI] provider registered for spec:",d.API_SPEC_ID),this.session=await this.cameraKit.createSession(),window.ckSession=this.session,this.session.events.addEventListener("error",i=>{var s;console.error("Camera Kit error:",i.detail),this.updateStatus(`Error: ${((s=i.detail)==null?void 0:s.error)||i.detail}`)}),this.liveCanvas=this.session.output.live,this.outputContainer.appendChild(this.liveCanvas),this.liveCanvas.style.width="100%",this.liveCanvas.style.height="100%",this.liveCanvas.style.objectFit="cover",this.liveCanvas.style.display="block",this.liveCanvas.style.background="#000";const a=/iPad|iPhone|iPod/.test(navigator.userAgent)||/Macintosh/.test(navigator.userAgent)&&"ontouchend"in document?1:Math.min(window.devicePixelRatio||1,2),o=()=>{const i=this.liveCanvas.getBoundingClientRect();this.liveCanvas.width=Math.round(i.width*a),this.liveCanvas.height=Math.round(i.height*a),console.log(`Canvas sized: ${this.liveCanvas.width}x${this.liveCanvas.height} (CSS: ${i.width}x${i.height}, DPR: ${a})`)};new ResizeObserver(o).observe(this.liveCanvas.parentElement),window.addEventListener("orientationchange",o),window.addEventListener("load",o),o(),this.updateStatus("Camera Kit ready")}catch(t){console.error("Failed to initialize Camera Kit:",t),this.updateStatus(`Init error: ${t.message}`)}}async startCamera(){try{this.updateStatus("Starting camera..."),this.mediaStream=await navigator.mediaDevices.getUserMedia({video:{facingMode:{ideal:this.currentFacingMode},frameRate:{ideal:30}},audio:!1});const t=h(this.mediaStream);await this.session.setSource(t),this.currentFacingMode==="user"&&t.setTransform(m.MirrorX),this.session.play("live"),this.updateStatus("Camera started")}catch(t){console.error("Camera failed:",t),t.name==="OverconstrainedError"?await this.tryFallbackCamera():this.updateStatus("Camera unavailable")}}async tryFallbackCamera(){try{this.mediaStream=await navigator.mediaDevices.getUserMedia({video:{facingMode:this.currentFacingMode}});const t=h(this.mediaStream);await this.session.setSource(t),this.currentFacingMode==="user"&&t.setTransform(m.MirrorX),this.session.play("live"),this.updateStatus("Camera started (fallback)")}catch(t){console.error("Fallback camera failed:",t),this.updateStatus("Unable to access camera")}}async switchCamera(){if(this.session)try{const t=this.currentFacingMode==="user"?"environment":"user";if(this.currentFacingMode==="user"&&t==="environment"){r("Switching from front to back camera - reloading page"),L(),f(n),this.mediaStream&&this.mediaStream.getTracks().forEach(a=>a.stop()),window.location.reload();return}r("Switching from back to front camera - smooth switch"),this.mediaStream&&this.mediaStream.getTracks().forEach(a=>a.stop()),this.currentFacingMode=t,await this.startCamera(),this.lensActive&&this.currentLens&&await this.session.applyLens(this.currentLens),console.log(`Camera switched to: ${this.currentFacingMode}`)}catch(t){console.error("Switch failed:",t),this.currentFacingMode==="environment"&&(this.currentFacingMode="user")}}async toggleLens(){if(this.session)try{this.lensActive&&this.currentLens?(await this.session.clearLens(),this.lensActive=!1,this.currentLens=null,this.updateStatus("Lens removed")):(this.updateStatus("Loading lens..."),this.currentLens=await this.cameraKit.lensRepository.loadLens(d.LENS_ID,d.LENS_GROUP_ID),await this.session.applyLens(this.currentLens),this.lensActive=!0,this.updateStatus("AR active!"))}catch(t){console.error("Lens error:",t),this.updateStatus(`Lens error: ${t.message}`),this.lensActive=!1,this.currentLens=null}}async autoStartWithLens(){try{this.updateStatus("Auto-starting..."),await this.startCamera(),await new Promise(t=>setTimeout(t,1e3)),await this.toggleLens(),this.updateStatus("Ready! Double-tap to switch camera")}catch(t){console.error("Auto-start failed:",t),this.updateStatus("Auto-start failed")}}setupDoubleTapGesture(){const t=this.outputContainer;t.addEventListener("touchend",a=>{a.preventDefault(),this.handleDoubleTap()}),t.addEventListener("click",a=>{a.target.closest("button")||this.handleDoubleTap()})}setupBackgroundAudio(){if(!this.backgroundAudio){console.log("No background audio element found");return}this.backgroundAudio.volume=.2,this.backgroundAudio.loop=!0,this.backgroundAudio.addEventListener("canplay",()=>console.log("Audio ready")),this.backgroundAudio.addEventListener("error",a=>{console.error("Audio error:",a.target.error)});const t=async()=>{try{await this.backgroundAudio.play(),console.log("✅ Background audio started"),document.removeEventListener("touchstart",t),document.removeEventListener("click",t),document.removeEventListener("keydown",t)}catch(a){console.error("❌ Audio play failed:",a)}};document.addEventListener("touchstart",t,{once:!0}),document.addEventListener("click",t,{once:!0}),document.addEventListener("keydown",t,{once:!0}),this.backgroundAudio.play().catch(()=>{console.log("Audio autoplay prevented - waiting for user interaction")})}handleDoubleTap(){const t=Date.now(),a=t-this.lastTap;this.tapTimeout&&(clearTimeout(this.tapTimeout),this.tapTimeout=null),a<300&&a>0?(this.switchCamera(),this.lastTap=0):(this.lastTap=t,this.tapTimeout=setTimeout(()=>this.lastTap=0,300))}updateStatus(t){console.log(`[BayouAR] ${t}`)}destroy(){this.mediaStream&&this.mediaStream.getTracks().forEach(t=>t.stop()),this.session&&this.session.destroy().catch(console.error),this.backgroundAudio&&(this.backgroundAudio.pause(),this.backgroundAudio.currentTime=0)}}async function I(){try{window.bayouApp=new T,console.log("🎮 Bayou AR App initialized with Remote API + Caching")}catch(e){console.error("Failed to start app:",e);const t=document.getElementById("app");t&&(t.style.color="#fff",t.style.display="grid",t.style.placeItems="center",t.textContent=`App error: ${(e==null?void 0:e.message)||e}`)}}document.addEventListener("DOMContentLoaded",I);window.addEventListener("beforeunload",()=>{window.bayouApp&&window.bayouApp.destroy()});console.log("🚀 Unified Bayou AR script loaded (Remote API + Camera + Caching)");
