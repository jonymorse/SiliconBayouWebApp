import"./modulepreload-polyfill-B5Qt9EMX.js";import{b as p,C as i,c as m,a as g,r as f}from"./config-9n2kwhPe.js";const y=new TextEncoder,u=new TextDecoder,c=e=>y.encode(typeof e=="string"?e:JSON.stringify(e)),d=(...e)=>console.log("[RemoteAPI]",...e);let l={names:["Frog","Gator"],collected:{Frog:!0,Gator:!1,Pelican:!1},t:0};function S(e){const n=Array.isArray(e==null?void 0:e.names)?e.names.map(String):[],a=e!=null&&e.collected&&typeof e.collected=="object"?e.collected:{},o={};n.forEach(t=>o[t]=a[t]===void 0?!0:!!a[t]),Object.keys(a).forEach(t=>{a[t]&&(o[t]=!0,n.includes(t)||n.push(t))});const s=Number.isFinite(e==null?void 0:e.t)?e.t:Date.now();return{names:n,collected:o,t:s}}let I=0;const w=()=>({apiSpecId:i.API_SPEC_ID,getRequestHandler(e){const n=(e==null?void 0:e.body)&&(e.body.byteLength??e.body.length)||0;if(d("REQ",`endpoint=${e.endpointId}`,`params=${JSON.stringify(e.parameters||{})}`,`body=${n}B`),e.endpointId==="ping"){const a=++I,o=performance.now();return s=>{s({status:"success",metadata:{n:String(a)},body:c({pong:!0,t:Date.now(),n:a})}),d("RES",`ping #${a}`,`${Math.round(performance.now()-o)}ms`)}}if(e.endpointId==="get_state"){const a=performance.now();return o=>{o({status:"success",metadata:{count:String(l.names.length)},body:c(l)}),d("RES","get_state",`${Math.round(performance.now()-a)}ms`)}}if(e.endpointId==="set_state"){const a=performance.now();return o=>{var s;try{let t=(s=e.parameters)==null?void 0:s.payload;if(t==null&&e.body&&(t=u.decode(e.body)),typeof t!="string"){o({status:"bad_request",metadata:{},body:c('missing or invalid "payload" (expected stringified JSON)')});return}const r=JSON.parse(t);l=S(r),o({status:"success",metadata:{count:String(l.names.length)},body:c({ok:!0})})}catch(t){o({status:"server_error",metadata:{},body:c(String((t==null?void 0:t.message)||t))})}finally{d("RES","set_state",`${Math.round(performance.now()-a)}ms`)}}}}});async function E(){const e=await p({apiToken:i.API_TOKEN,logger:"console"},t=>t.provides(g(f.token,()=>w())));console.info("[RemoteAPI] provider registered for spec:",i.API_SPEC_ID);const n=await e.createSession();window.ckSession=n;const a=await navigator.mediaDevices.getUserMedia({video:{facingMode:{ideal:"environment"},frameRate:{ideal:30}},audio:!1}),o=m(a);await n.setSource(o);const s=await e.lensRepository.loadLens(i.LENS_ID,i.LENS_GROUP_ID);await n.applyLens(s),document.getElementById("app").appendChild(n.output.live),n.play("live"),n.events.addEventListener("error",t=>{var r;return console.error("[Lens error]",((r=t.detail)==null?void 0:r.error)||t)}),window.addEventListener("beforeunload",()=>{var t;try{a.getTracks().forEach(r=>r.stop())}catch{}(t=n.destroy)==null||t.call(n)}),console.log("Camera Kit ready. Remote API (ping/get_state/set_state) live.")}document.addEventListener("DOMContentLoaded",()=>{E().catch(e=>{console.error(e);const n=document.getElementById("app");n.style.color="#fff",n.style.display="grid",n.style.placeItems="center",n.textContent=`Camera/Lens error: ${(e==null?void 0:e.message)||e}`})});
